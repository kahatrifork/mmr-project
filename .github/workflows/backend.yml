name: Deploy backend
on:
  push:
    branches:
      - main
    paths:
      - "backend/**/*"

concurrency:
  group: deploy-group # optional: ensure only one action runs at a time

jobs:
  migrations_lint:
    services:
      # Spin up a postgres:15 container to be used as the dev-database for analysis.
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: dev
          POSTGRES_PASSWORD: pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ariga/setup-atlas@v0
      - uses: ariga/atlas-action/migrate/lint@v1
        with:
          working-directory: ./backend
          dir: "file://migrations"
          dev-url: postgres://postgres:pass@localhost:5432/dev?sslmode=disable
          env: gorm
          dir-name: "mmr-project"
  migrations_apply:
    name: Migrate database
    runs-on: ubuntu-latest
    needs: migrations_lint
    steps:
      - uses: actions/checkout@v3
      - uses: ariga/setup-atlas@v0
      - name: Apply Atlas Migrations
        uses: ariga/atlas-action/migrate/apply@v1
        with:
          working-directory: ./backend
          url: ${{ secrets.DATABASE_URL }}
          dir: "file://migrations"
          env: gorm
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: migrations_apply
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        working-directory: ./backend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
