/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ViewPlayerHistoryDetails,
  ViewTimeStatisticsEntry,
} from '../models/index';
import {
    ViewPlayerHistoryDetailsFromJSON,
    ViewPlayerHistoryDetailsToJSON,
    ViewTimeStatisticsEntryFromJSON,
    ViewTimeStatisticsEntryToJSON,
} from '../models/index';

export interface V1StatsPlayerHistoryGetRequest {
    userId?: number;
    start?: string;
    end?: string;
}

/**
 * 
 */
export class StatisticsApi extends runtime.BaseAPI {

    /**
     * Get player history including MMR and date
     * Get player history
     */
    async v1StatsPlayerHistoryGetRaw(requestParameters: V1StatsPlayerHistoryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ViewPlayerHistoryDetails>>> {
        const queryParameters: any = {};

        if (requestParameters['userId'] != null) {
            queryParameters['userId'] = requestParameters['userId'];
        }

        if (requestParameters['start'] != null) {
            queryParameters['start'] = requestParameters['start'];
        }

        if (requestParameters['end'] != null) {
            queryParameters['end'] = requestParameters['end'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/stats/player-history`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ViewPlayerHistoryDetailsFromJSON));
    }

    /**
     * Get player history including MMR and date
     * Get player history
     */
    async v1StatsPlayerHistoryGet(requestParameters: V1StatsPlayerHistoryGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ViewPlayerHistoryDetails>> {
        const response = await this.v1StatsPlayerHistoryGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get number of matches for each day of week and hour of day
     * Get match distribution over time
     */
    async v1StatsTimeDistributionGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ViewTimeStatisticsEntry>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/stats/time-distribution`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ViewTimeStatisticsEntryFromJSON));
    }

    /**
     * Get number of matches for each day of week and hour of day
     * Get match distribution over time
     */
    async v1StatsTimeDistributionGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ViewTimeStatisticsEntry>> {
        const response = await this.v1StatsTimeDistributionGetRaw(initOverrides);
        return await response.value();
    }

}
